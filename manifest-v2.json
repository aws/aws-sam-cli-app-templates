{
  "graalvm.java11 (provided.al2)": [
    {
      "directory": "al2/graalvm/11/maven",
      "displayName": "Hello World Example",
      "dependencyManager": "maven",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "al2/graalvm/11/gradle",
      "displayName": "Hello World Example",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    }
  ],
  "graalvm.java17 (provided.al2)": [
    {
      "directory": "al2/graalvm/17/maven",
      "displayName": "Hello World Example",
      "dependencyManager": "maven",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "al2/graalvm/17/gradle",
      "displayName": "Hello World Example",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    }
  ],
  "dotnetcore3.1": [
    {
      "directory": "dotnetcore3.1/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "dotnetcore3.1/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "cli-package",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "dotnetcore3.1/web",
      "displayName": "Quick Start: Web Backend",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-web",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "dotnetcore3.1/cw-event",
      "displayName": "Quick Start: Scheduled Events",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-cloudwatch-events",
      "packageType": "Zip",
      "useCaseName": "Scheduled task"
    },
    {
      "directory": "dotnetcore3.1/scratch",
      "displayName": "Quick Start: From Scratch",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-from-scratch",
      "packageType": "Zip",
      "useCaseName": "Standalone function"
    },
    {
      "directory": "dotnetcore3.1/sns",
      "displayName": "Quick Start: SNS",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-sns",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "dotnetcore3.1/sqs",
      "displayName": "Quick Start: SQS",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-sqs",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "dotnetcore3.1/s3",
      "displayName": "Quick Start: S3",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-s3",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    }
  ],
  "dotnet6": [
    {
      "directory": "dotnet6/sqs",
      "displayName": "Quick Start: SQS",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-sqs",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "dotnet6/sns",
      "displayName": "Quick Start: SNS",
      "dependencyManager": "cli-package",
      "appTemplate": "quickstart-sns",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "dotnet6/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "dotnet6/hello-pt",
      "displayName": "Hello World Example .NET With Lambda Powertools",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world-powertools-dotnet",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "dotnet6/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "cli-package",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "dotnet6/cw-event",
      "displayName": "Quick Start: Scheduled Events",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-cloudwatch-events",
      "packageType": "Zip",
      "useCaseName": "Scheduled task"
    },
    {
      "directory": "dotnet6/scratch",
      "displayName": "Quick Start: From Scratch",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-from-scratch",
      "packageType": "Zip",
      "useCaseName": "Standalone function"
    },
    {
      "directory": "dotnet6/web",
      "displayName": "Quick Start: Web Backend",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-web",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "dotnet6/s3",
      "displayName": "Quick Start: S3",
      "dependencyManager": "cli-package",
      "appTemplate": "quick-start-s3",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    }
  ],
  "aot.dotnet7 (provided.al2)": [
    {
      "directory": "al2/dotnet7-aot/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    }
  ],
  "go1.x": [
    {
      "directory": "go1.x/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "mod",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "go1.x/event-bridge",
      "displayName": "EventBridge Hello World",
      "dependencyManager": "mod",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "go1.x/event-bridge-schema",
      "displayName": "EventBridge App from scratch (100+ Event Schemas)",
      "dependencyManager": "mod",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "go1.x/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "mod",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    }
  ],
  "go (provided.al2)": [
    {
      "directory": "al2/go/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "mod",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "al2/go/event-bridge",
      "displayName": "EventBridge Hello World",
      "dependencyManager": "mod",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "al2/go/event-bridge-schema",
      "displayName": "EventBridge App from scratch (100+ Event Schemas)",
      "dependencyManager": "mod",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "al2/go/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "mod",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "al2/go/response-streaming",
      "displayName": "Lambda function using Response Streaming",
      "dependencyManager": "mod",
      "appTemplate": "response-streaming",
      "packageType": "Zip",
      "useCaseName": "Lambda Response Streaming"
    }
  ],
  "java8": [
    {
      "directory": "java8/hello-gradle",
      "displayName": "Hello World Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java8/hello-maven",
      "displayName": "Hello World Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java8/hello-pt-maven",
      "displayName": "Hello World Example Java With Lambda Powertools",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-powertools-java",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "java8/event-bridge-gradle",
      "displayName": "EventBridge Hello World: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8/event-bridge-maven",
      "displayName": "EventBridge Hello World: Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8/event-bridge-schema-gradle",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8/event-bridge-schema-maven",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8/step-func-gradle",
      "displayName": "Step Functions Sample App (Stock Trader): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "java8/step-func-maven",
      "displayName": "Step Functions Sample App (Stock Trader): Maven",
      "dependencyManager": "maven",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    }
  ],
  "java8.al2": [
    {
      "directory": "java8.al2/hello-gradle",
      "displayName": "Hello World Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java8.al2/hello-maven",
      "displayName": "Hello World Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java8.al2/hello-pt-maven",
      "displayName": "Hello World Example Java With Lambda Powertools",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-powertools-java",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "java8.al2/event-bridge-gradle",
      "displayName": "EventBridge Hello World: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8.al2/event-bridge-maven",
      "displayName": "EventBridge Hello World: Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8.al2/event-bridge-schema-gradle",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8.al2/event-bridge-schema-maven",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java8.al2/step-func-gradle",
      "displayName": "Step Functions Sample App (Stock Trader): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "java8.al2/step-func-maven",
      "displayName": "Step Functions Sample App (Stock Trader): Maven",
      "dependencyManager": "maven",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    }
  ],
  "java11": [
    {
      "directory": "java11/hello-gradle",
      "displayName": "Hello World Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java11/hello-maven",
      "displayName": "Hello World Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java11/hello-pt-maven",
      "displayName": "Hello World Example Java With Lambda Powertools",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-powertools-java",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "java11/event-bridge-gradle",
      "displayName": "EventBridge Hello World: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java11/event-bridge-maven",
      "displayName": "EventBridge Hello World: Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java11/event-bridge-schema-gradle",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java11/event-bridge-schema-maven",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java11/step-func-gradle",
      "displayName": "Step Functions Sample App (Stock Trader): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "java11/step-func-maven",
      "displayName": "Step Functions Sample App (Stock Trader): Maven",
      "dependencyManager": "maven",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    }
  ],
  "java17": [
    {
      "directory": "java17/hello-gradle",
      "displayName": "Hello World Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java17/hello-maven",
      "displayName": "Hello World Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java17/hello-pt-maven",
      "displayName": "Hello World Example Java With Lambda Powertools: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-powertools-java",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "java17/hello-pt-gradle",
      "displayName": "Hello World Example Java With Lambda Powertools: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world-powertools-java",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "java17/event-bridge-gradle",
      "displayName": "EventBridge Hello World: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java17/event-bridge-maven",
      "displayName": "EventBridge Hello World: Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java17/event-bridge-schema-gradle",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java17/event-bridge-schema-maven",
      "displayName": "EventBridge App from scratch (100+ Event Schemas): Maven",
      "dependencyManager": "maven",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "java17/step-func-gradle",
      "displayName": "Step Functions Sample App (Stock Trader): Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "java17/step-func-maven",
      "displayName": "Step Functions Sample App (Stock Trader): Maven",
      "dependencyManager": "maven",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    }
  ],
  "nodejs16.x": [
    {
      "directory": "nodejs16.x/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs16.x/hello-ts",
      "displayName": "Hello World Example TypeScript",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-typescript",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs16.x/hello-ts-pt",
      "displayName": "Hello World Example TypeScript With Lambda Powertools",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-powertools-typescript",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "nodejs16.x/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "nodejs16.x/scratch",
      "displayName": "Quick Start: From Scratch",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-from-scratch",
      "packageType": "Zip",
      "useCaseName": "Standalone function"
    },
    {
      "directory": "nodejs16.x/cw-event",
      "displayName": "Quick Start: Scheduled Events",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-cloudwatch-events",
      "packageType": "Zip",
      "useCaseName": "Scheduled task"
    },
    {
      "directory": "nodejs16.x/s3",
      "displayName": "Quick Start: S3",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-s3",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs16.x/sns",
      "displayName": "Quick Start: SNS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sns",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs16.x/sqs",
      "displayName": "Quick Start: SQS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sqs",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs16.x/web",
      "displayName": "Quick Start: Web Backend",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-web",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "nodejs16.x/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "nodejs16.x/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    },
    {
      "directory": "nodejs16.x/response-streaming",
      "displayName": "Lambda function using Response Streaming",
      "dependencyManager": "npm",
      "appTemplate": "response-streaming",
      "packageType": "Zip",
      "useCaseName": "Lambda Response Streaming"
    }
  ],
  "amazon/nodejs16.x-base": [
    {
      "directory": "nodejs16.x/hello-img",
      "displayName": "Hello World Image Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "nodejs18.x": [
    {
      "directory": "nodejs18.x/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs18.x/hello-ts",
      "displayName": "Hello World Example TypeScript",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-typescript",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs18.x/hello-ts-pt",
      "displayName": "Hello World Example TypeScript With Lambda Powertools",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-powertools-typescript",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "nodejs18.x/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "nodejs18.x/scratch",
      "displayName": "Quick Start: From Scratch",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-from-scratch",
      "packageType": "Zip",
      "useCaseName": "Standalone function"
    },
    {
      "directory": "nodejs18.x/cw-event",
      "displayName": "Quick Start: Scheduled Events",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-cloudwatch-events",
      "packageType": "Zip",
      "useCaseName": "Scheduled task"
    },
    {
      "directory": "nodejs18.x/s3",
      "displayName": "Quick Start: S3",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-s3",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs18.x/sns",
      "displayName": "Quick Start: SNS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sns",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs18.x/sqs",
      "displayName": "Quick Start: SQS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sqs",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs18.x/web",
      "displayName": "Quick Start: Web Backend",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-web",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "nodejs18.x/response-streaming",
      "displayName": "Lambda function using Response Streaming",
      "dependencyManager": "npm",
      "appTemplate": "response-streaming",
      "packageType": "Zip",
      "useCaseName": "Lambda Response Streaming"
    }
  ],
  "amazon/nodejs18.x-base": [
    {
      "directory": "nodejs18.x/hello-img",
      "displayName": "Hello World Image Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "nodejs14.x": [
    {
      "directory": "nodejs14.x/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs14.x/hello-ts",
      "displayName": "Hello World Example TypeScript",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-typescript",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs14.x/hello-ts-pt",
      "displayName": "Hello World Example TypeScript With Lambda Powertools",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-powertools-typescript",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "nodejs14.x/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "nodejs14.x/scratch",
      "displayName": "Quick Start: From Scratch",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-from-scratch",
      "packageType": "Zip",
      "useCaseName": "Standalone function"
    },
    {
      "directory": "nodejs14.x/cw-event",
      "displayName": "Quick Start: Scheduled Events",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-cloudwatch-events",
      "packageType": "Zip",
      "useCaseName": "Scheduled task"
    },
    {
      "directory": "nodejs14.x/s3",
      "displayName": "Quick Start: S3",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-s3",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs14.x/sns",
      "displayName": "Quick Start: SNS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sns",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs14.x/sqs",
      "displayName": "Quick Start: SQS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sqs",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs14.x/web",
      "displayName": "Quick Start: Web Backend",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-web",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "nodejs14.x/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "nodejs14.x/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    }
  ],
  "nodejs12.x": [
    {
      "directory": "nodejs12.x/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "nodejs12.x/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "nodejs12.x/scratch",
      "displayName": "Quick Start: From Scratch",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-from-scratch",
      "packageType": "Zip",
      "useCaseName": "Standalone function"
    },
    {
      "directory": "nodejs12.x/cw-event",
      "displayName": "Quick Start: Scheduled Events",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-cloudwatch-events",
      "packageType": "Zip",
      "useCaseName": "Scheduled task"
    },
    {
      "directory": "nodejs12.x/s3",
      "displayName": "Quick Start: S3",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-s3",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs12.x/sns",
      "displayName": "Quick Start: SNS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sns",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs12.x/sqs",
      "displayName": "Quick Start: SQS",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-sqs",
      "packageType": "Zip",
      "useCaseName": "Data processing"
    },
    {
      "directory": "nodejs12.x/ts",
      "displayName": "Quick Start: App Backend using TypeScript",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-typescript-app",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "nodejs12.x/web",
      "displayName": "Quick Start: Web Backend",
      "dependencyManager": "npm",
      "appTemplate": "quick-start-web",
      "packageType": "Zip",
      "useCaseName": "Serverless API"
    },
    {
      "directory": "nodejs12.x/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "nodejs12.x/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "npm",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    }
  ],
  "python3.7": [
    {
      "directory": "python3.7/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.7/hello-pt",
      "displayName": "Hello World Example Python With Lambda Powertools",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-powertools-python",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "python3.7/event-bridge",
      "displayName": "EventBridge Hello World",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.7/event-bridge-schema",
      "displayName": "EventBridge App from scratch (100+ Event Schemas)",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.7/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "python3.7/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "python3.7/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    }
  ],
  "python3.8": [
    {
      "directory": "python3.8/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.8/hello-pt",
      "displayName": "Hello World Example Python With Lambda Powertools",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-powertools-python",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "python3.8/event-bridge",
      "displayName": "EventBridge Hello World",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.8/event-bridge-schema",
      "displayName": "EventBridge App from scratch (100+ Event Schemas)",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.8/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "python3.8/efs",
      "displayName": "Elastic File System Sample App",
      "dependencyManager": "pip",
      "appTemplate": "efs-sample-app",
      "packageType": "Zip",
      "useCaseName": "Lambda EFS example"
    },
    {
      "directory": "python3.8/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "python3.8/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    }
  ],
  "python3.9": [
    {
      "directory": "python3.9/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.9/hello-pt",
      "displayName": "Hello World Example Python With Lambda Powertools",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-powertools-python",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "python3.9/event-bridge",
      "displayName": "EventBridge Hello World",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.9/event-bridge-schema",
      "displayName": "EventBridge App from scratch (100+ Event Schemas)",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.9/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "python3.9/efs",
      "displayName": "Elastic File System Sample App",
      "dependencyManager": "pip",
      "appTemplate": "efs-sample-app",
      "packageType": "Zip",
      "useCaseName": "Lambda EFS example"
    },
    {
      "directory": "python3.9/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "python3.9/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    }
  ],
  "python3.10": [
    {
      "directory": "python3.10/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.10/hello-pt",
      "displayName": "Hello World Example With Powertools",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-powertools-python",
      "packageType": "Zip",
      "useCaseName": "Hello World Example With Powertools"
    },
    {
      "directory": "python3.10/event-bridge",
      "displayName": "EventBridge Hello World",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-hello-world",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.10/event-bridge-schema",
      "displayName": "EventBridge App from scratch (100+ Event Schemas)",
      "dependencyManager": "pip",
      "appTemplate": "eventBridge-schema-app",
      "isDynamicTemplate": "True",
      "packageType": "Zip",
      "useCaseName": "Infrastructure event management"
    },
    {
      "directory": "python3.10/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    },
    {
      "directory": "python3.10/efs",
      "displayName": "Elastic File System Sample App",
      "dependencyManager": "pip",
      "appTemplate": "efs-sample-app",
      "packageType": "Zip",
      "useCaseName": "Lambda EFS example"
    },
    {
      "directory": "python3.10/web-conn",
      "displayName": "Quick Start: Web Backend With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-connector",
      "packageType": "Zip",
      "useCaseName": "Serverless Connector Hello World Example"
    },
    {
      "directory": "python3.10/step-func-conn",
      "displayName": "Step Functions Sample App (Stock Trader) With Connectors",
      "dependencyManager": "pip",
      "appTemplate": "step-functions-with-connectors",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow with Connectors"
    }
  ],
  "ruby2.7": [
    {
      "directory": "ruby2.7/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "bundler",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "ruby2.7/step-func",
      "displayName": "Step Functions Sample App (Stock Trader)",
      "dependencyManager": "bundler",
      "appTemplate": "step-functions-sample-app",
      "packageType": "Zip",
      "useCaseName": "Multi-step workflow"
    }
  ],
  "rust (provided.al2)": [
    {
      "directory": "al2/rust/hello",
      "displayName": "Hello World Example",
      "dependencyManager": "cargo",
      "appTemplate": "hello-world",
      "packageType": "Zip",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "al2/rust/hello-ddb",
      "displayName": "DynamoDB Example",
      "dependencyManager": "cargo",
      "appTemplate": "hello-world-ddb",
      "packageType": "Zip",
      "useCaseName": "DynamoDB Example"
    }
  ],
  "amazon/nodejs14.x-base": [
    {
      "directory": "nodejs14.x/hello-img",
      "displayName": "Hello World Image Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/nodejs12.x-base": [
    {
      "directory": "nodejs12.x/hello-img",
      "displayName": "Hello World Image Example",
      "dependencyManager": "npm",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/python3.8-base": [
    {
      "directory": "python3.8/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.8/apigw-pytorch",
      "displayName": "PyTorch Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-pytorch",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.8/apigw-scikit",
      "displayName": "Scikit-learn Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-scikit-learn",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.8/apigw-tensorflow",
      "displayName": "Tensorflow Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-tensorflow",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.8/apigw-xgboost",
      "displayName": "XGBoost Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-xgboost",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    }
  ],
  "amazon/python3.9-base": [
    {
      "directory": "python3.9/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.9/apigw-pytorch",
      "displayName": "PyTorch Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-pytorch",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.9/apigw-scikit",
      "displayName": "Scikit-learn Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-scikit-learn",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.9/apigw-tensorflow",
      "displayName": "Tensorflow Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-tensorflow",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.9/apigw-xgboost",
      "displayName": "XGBoost Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-xgboost",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    }
  ],
  "amazon/python3.10-base": [
    {
      "directory": "python3.10/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "python3.10/apigw-pytorch",
      "displayName": "PyTorch Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-pytorch",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.10/apigw-scikit",
      "displayName": "Scikit-learn Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-scikit-learn",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.10/apigw-tensorflow",
      "displayName": "Tensorflow Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-tensorflow",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    },
    {
      "directory": "python3.10/apigw-xgboost",
      "displayName": "XGBoost Machine Learning Inference API",
      "dependencyManager": "pip",
      "appTemplate": "ml-apigw-xgboost",
      "packageType": "Image",
      "useCaseName": "Machine Learning"
    }
  ],
  "amazon/ruby2.7-base": [
    {
      "directory": "ruby2.7/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "bundler",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/go1.x-base": [
    {
      "directory": "go1.x/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "mod",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/go-provided.al2-base": [
    {
      "directory": "al2/go/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "mod",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/java17-base": [
    {
      "directory": "java17/hello-img-gradle",
      "displayName": "Hello World Lambda Image Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java17/hello-img-maven",
      "displayName": "Hello World Lambda Image Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/java11-base": [
    {
      "directory": "java11/hello-img-gradle",
      "displayName": "Hello World Lambda Image Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java11/hello-img-maven",
      "displayName": "Hello World Lambda Image Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/dotnet6-base": [
    {
      "directory": "dotnet6/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/dotnet5.0-base": [
    {
      "directory": "dotnet5/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/dotnetcore3.1-base": [
    {
      "directory": "dotnetcore3.1/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "cli-package",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/python3.7-base": [
    {
      "directory": "python3.7/hello-img",
      "displayName": "Hello World Lambda Image Example",
      "dependencyManager": "pip",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/java8-base": [
    {
      "directory": "java8/hello-img-gradle",
      "displayName": "Hello World Lambda Image Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java8/hello-img-maven",
      "displayName": "Hello World Lambda Image Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ],
  "amazon/java8.al2-base": [
    {
      "directory": "java8.al2/hello-img-gradle",
      "displayName": "Hello World Lambda Image Example: Gradle",
      "dependencyManager": "gradle",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    },
    {
      "directory": "java8.al2/hello-img-maven",
      "displayName": "Hello World Lambda Image Example: Maven",
      "dependencyManager": "maven",
      "appTemplate": "hello-world-lambda-image",
      "packageType": "Image",
      "useCaseName": "Hello World Example"
    }
  ]
}
